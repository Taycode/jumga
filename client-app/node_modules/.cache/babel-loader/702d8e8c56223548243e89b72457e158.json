{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/usr/src/app/src/util/auth.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport { apiRequest } from \"./apiRequest\";\nimport PageLoader from \"../dashboard-components/PageLoader\";\nimport { history } from \"./router\";\nconst authContext = /*#__PURE__*/createContext(); // Context Provider component that wraps your app and makes auth object\n// available to any child component that calls the useAuth() hook.\n\nexport function ProvideAuth({\n  children\n}) {\n  _s();\n\n  const auth = useProvideAuth();\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n} // Hook that enables any component to subscribe to auth state\n\n_s(ProvideAuth, \"XNU4Jn8u4aVzJknlKOHFJq03xMo=\", false, function () {\n  return [useProvideAuth];\n});\n\n_c = ProvideAuth;\nexport const useAuth = () => {\n  _s2();\n\n  return useContext(authContext);\n}; // Provider hook that creates auth object and handles state\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useProvideAuth() {\n  _s3();\n\n  const [user, setUser] = useState(null);\n\n  const handleAuthStateChange = async () => {\n    const response = await apiRequest(\"/auth/user\", \"GET\");\n\n    if (response && response.status) {\n      return setUser({ ...response.data.user\n      });\n    }\n\n    return setUser(false);\n  };\n\n  const register = async registerData => {\n    const response = await apiRequest(\"/auth/register\", \"POST\", registerData);\n    return response;\n  };\n\n  const login = async signInData => {\n    const loginResponse = await await apiRequest(\"/auth/login\", \"POST\", signInData);\n\n    if (loginResponse && loginResponse.status) {\n      const {\n        data: {\n          token\n        }\n      } = loginResponse;\n      localStorage.setItem(\"token\", token);\n      await handleAuthStateChange();\n    }\n\n    return loginResponse;\n  };\n\n  const logout = () => {\n    setUser(false);\n    return localStorage.clear();\n  };\n\n  useEffect(() => {\n    console.log(\"called\");\n    handleAuthStateChange();\n  }, []);\n  return {\n    user,\n    register,\n    login,\n    logout\n  };\n} // A Higher Order Component for requiring authentication\n\n\n_s3(useProvideAuth, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n\nexport const requireAuth = Component => {\n  var _s4 = $RefreshSig$();\n\n  return _s4(props => {\n    _s4();\n\n    // Get authenticated user\n    const auth = useAuth();\n    useEffect(() => {\n      // Redirect if not signed in\n      if (auth.user === false) {\n        history.replace(\"/user/login\");\n      }\n    }, [auth]); // Show loading indicator\n    // We're either loading (user is null) or we're about to redirect (user is false)\n\n    if (!auth.user) {\n      return /*#__PURE__*/_jsxDEV(PageLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 14\n      }, this);\n    } // Render component now that we have user\n\n\n    return /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, this);\n  }, \"/Kwvfsr09w8L0T4ZfhN60sLwHic=\", false, function () {\n    return [useAuth];\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ProvideAuth\");","map":{"version":3,"sources":["/usr/src/app/src/util/auth.js"],"names":["React","useState","useEffect","useContext","createContext","apiRequest","PageLoader","history","authContext","ProvideAuth","children","auth","useProvideAuth","useAuth","user","setUser","handleAuthStateChange","response","status","data","register","registerData","login","signInData","loginResponse","token","localStorage","setItem","logout","clear","console","log","requireAuth","Component","props","replace"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\nimport { apiRequest } from \"./apiRequest\";\nimport PageLoader from \"../dashboard-components/PageLoader\";\nimport { history } from \"./router\";\n\nconst authContext = createContext();\n\n// Context Provider component that wraps your app and makes auth object\n// available to any child component that calls the useAuth() hook.\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\n// Hook that enables any component to subscribe to auth state\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n\n// Provider hook that creates auth object and handles state\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n\n  const handleAuthStateChange = async () => {\n    const response = await apiRequest(\"/auth/user\", \"GET\");\n    if (response && response.status) {\n      return setUser({ ...response.data.user });\n    }\n    return setUser(false);\n  };\n\n  const register = async (registerData) => {\n    const response = await apiRequest(\"/auth/register\", \"POST\", registerData);\n    return response;\n  };\n\n  const login = async (signInData) => {\n    const loginResponse = await await apiRequest(\n      \"/auth/login\",\n      \"POST\",\n      signInData\n    );\n    if (loginResponse && loginResponse.status) {\n      const {\n        data: { token },\n      } = loginResponse;\n      localStorage.setItem(\"token\", token);\n      await handleAuthStateChange();\n    }\n    return loginResponse;\n  };\n\n  const logout = () => {\n    setUser(false);\n    return localStorage.clear();\n  };\n\n  useEffect(() => {\n    console.log(\"called\");\n    handleAuthStateChange();\n  }, []);\n\n  return {\n    user,\n    register,\n    login,\n    logout,\n  };\n}\n\n// A Higher Order Component for requiring authentication\nexport const requireAuth = (Component) => {\n  return (props) => {\n    // Get authenticated user\n    const auth = useAuth();\n\n    useEffect(() => {\n      // Redirect if not signed in\n      if (auth.user === false) {\n        history.replace(\"/user/login\");\n      }\n    }, [auth]);\n\n    // Show loading indicator\n    // We're either loading (user is null) or we're about to redirect (user is false)\n    if (!auth.user) {\n      return <PageLoader />;\n    }\n\n    // Render component now that we have user\n    return <Component {...props} />;\n  };\n};\n"]},"metadata":{},"sourceType":"module"}