{"ast":null,"code":"const afterAuthRedirectPaths = {\n  register: \"/user/login\",\n  login: \"/dashboard\",\n  \"forgot-password\": \"#\"\n};\nexport default (async (authType, formData, auth, setLoading, router, setAuthMessage) => {\n  setLoading(true);\n  setAuthMessage(false);\n  const response = await auth[authType](formData);\n  response && setLoading(false);\n\n  if (response.status) {\n    setAuthMessage({\n      type: \"success\",\n      message: response.message\n    });\n    return router.push(afterAuthRedirectPaths[authType]);\n  }\n\n  return setAuthMessage({\n    type: \"error\",\n    message: response.message\n  });\n});","map":{"version":3,"sources":["/usr/src/app/src/components/AuthForm/helper/index.js"],"names":["afterAuthRedirectPaths","register","login","authType","formData","auth","setLoading","router","setAuthMessage","response","status","type","message","push"],"mappings":"AAAA,MAAMA,sBAAsB,GAAG;AAC7BC,EAAAA,QAAQ,EAAE,aADmB;AAE7BC,EAAAA,KAAK,EAAE,YAFsB;AAG7B,qBAAmB;AAHU,CAA/B;AAMA,gBAAe,OACbC,QADa,EAEbC,QAFa,EAGbC,IAHa,EAIbC,UAJa,EAKbC,MALa,EAMbC,cANa,KAOV;AACHF,EAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,EAAAA,cAAc,CAAC,KAAD,CAAd;AACA,QAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACF,QAAD,CAAJ,CAAeC,QAAf,CAAvB;AACAK,EAAAA,QAAQ,IAAIH,UAAU,CAAC,KAAD,CAAtB;;AAEA,MAAIG,QAAQ,CAACC,MAAb,EAAqB;AACnBF,IAAAA,cAAc,CAAC;AACbG,MAAAA,IAAI,EAAE,SADO;AAEbC,MAAAA,OAAO,EAAEH,QAAQ,CAACG;AAFL,KAAD,CAAd;AAIA,WAAOL,MAAM,CAACM,IAAP,CAAYb,sBAAsB,CAACG,QAAD,CAAlC,CAAP;AACD;;AAED,SAAOK,cAAc,CAAC;AACpBG,IAAAA,IAAI,EAAE,OADc;AAEpBC,IAAAA,OAAO,EAAEH,QAAQ,CAACG;AAFE,GAAD,CAArB;AAID,CAzBD","sourcesContent":["const afterAuthRedirectPaths = {\n  register: \"/user/login\",\n  login: \"/dashboard\",\n  \"forgot-password\": \"#\",\n};\n\nexport default async (\n  authType,\n  formData,\n  auth,\n  setLoading,\n  router,\n  setAuthMessage\n) => {\n  setLoading(true);\n  setAuthMessage(false);\n  const response = await auth[authType](formData);\n  response && setLoading(false);\n\n  if (response.status) {\n    setAuthMessage({\n      type: \"success\",\n      message: response.message,\n    });\n    return router.push(afterAuthRedirectPaths[authType]);\n  }\n\n  return setAuthMessage({\n    type: \"error\",\n    message: response.message,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}