{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/SettingsBilling.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PageLoader from \"./PageLoader\";\nimport { useAuth } from \"./../util/auth.js\";\nimport { useRouter } from \"./../util/router.js\";\nimport { redirectToBilling } from \"./../util/stripe.js\";\n\nfunction SettingsBilling(props) {\n  const router = useRouter();\n  const auth = useAuth();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (auth.user.planIsActive) {\n      // If user has an active plan then\n      // take them to Stripe billing\n      redirectToBilling().catch(error => {\n        setLoading(false);\n        props.onStatus({\n          type: \"error\",\n          message: error.message\n        });\n      });\n    } else {\n      // Otherwise go to pricing so they can\n      // purchase a plan\n      router.push(\"/pricing\");\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loading && /*#__PURE__*/React.createElement(PageLoader, {\n    style: {\n      height: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default SettingsBilling;","map":{"version":3,"sources":["/usr/src/app/src/components/SettingsBilling.js"],"names":["React","useEffect","useState","PageLoader","useAuth","useRouter","redirectToBilling","SettingsBilling","props","router","auth","loading","setLoading","user","planIsActive","catch","error","onStatus","type","message","push","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAMK,IAAI,GAAGN,OAAO,EAApB;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,IAAI,CAACG,IAAL,CAAUC,YAAd,EAA4B;AAC1B;AACA;AACAR,MAAAA,iBAAiB,GAAGS,KAApB,CAA2BC,KAAD,IAAW;AACnCJ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,QAAAA,KAAK,CAACS,QAAN,CAAe;AACbC,UAAAA,IAAI,EAAE,OADO;AAEbC,UAAAA,OAAO,EAAEH,KAAK,CAACG;AAFF,SAAf;AAID,OAND;AAOD,KAVD,MAUO;AACL;AACA;AACAV,MAAAA,MAAM,CAACW,IAAP,CAAY,UAAZ;AACD,KAfa,CAiBd;;AACD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACE,0CACGT,OAAO,iBACN,oBAAC,UAAD;AACE,IAAA,KAAK,EAAE;AACLU,MAAAA,MAAM,EAAE;AADH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAWD;;AAED,eAAed,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PageLoader from \"./PageLoader\";\nimport { useAuth } from \"./../util/auth.js\";\nimport { useRouter } from \"./../util/router.js\";\nimport { redirectToBilling } from \"./../util/stripe.js\";\n\nfunction SettingsBilling(props) {\n  const router = useRouter();\n  const auth = useAuth();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (auth.user.planIsActive) {\n      // If user has an active plan then\n      // take them to Stripe billing\n      redirectToBilling().catch((error) => {\n        setLoading(false);\n        props.onStatus({\n          type: \"error\",\n          message: error.message,\n        });\n      });\n    } else {\n      // Otherwise go to pricing so they can\n      // purchase a plan\n      router.push(\"/pricing\");\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {loading && (\n        <PageLoader\n          style={{\n            height: \"50px\",\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nexport default SettingsBilling;\n"]},"metadata":{},"sourceType":"module"}