{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/Newsletter.js\";\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport FormField from \"./FormField\";\nimport Button from \"react-bootstrap/Button\";\nimport newsletter from \"./../util/newsletter.js\";\nimport { useForm } from \"react-hook-form\";\n\nfunction Newsletter(props) {\n  const [subscribed, setSubscribed] = useState(false);\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n\n  const onSubmit = ({\n    email\n  }) => {\n    setSubscribed(true); // Parent component can optionally\n    // find out when subscribed.\n\n    props.onSubscribed && props.onSubscribed(); // Subscribe them\n\n    newsletter.subscribe({\n      email\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, subscribed === false && /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    size: props.size,\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    error: errors.email,\n    inputRef: register({\n      required: \"Please enter an email address\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: props.buttonColor,\n    size: props.size,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, props.buttonText)))), subscribed === true && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 31\n    }\n  }, props.subscribedMessage));\n}\n\nexport default Newsletter;","map":{"version":3,"sources":["/usr/src/app/src/components/Newsletter.js"],"names":["React","useState","Form","Col","FormField","Button","newsletter","useForm","Newsletter","props","subscribed","setSubscribed","handleSubmit","register","errors","onSubmit","email","onSubscribed","subscribe","size","required","buttonColor","buttonText","subscribedMessage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAEW,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAqCP,OAAO,EAAlD;;AAEA,QAAMQ,QAAQ,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAe;AAC9BL,IAAAA,aAAa,CAAC,IAAD,CAAb,CAD8B,CAE9B;AACA;;AACAF,IAAAA,KAAK,CAACQ,YAAN,IAAsBR,KAAK,CAACQ,YAAN,EAAtB,CAJ8B,CAK9B;;AACAX,IAAAA,UAAU,CAACY,SAAX,CAAqB;AAAEF,MAAAA;AAAF,KAArB;AACD,GAPD;;AASA,sBACE,0CACGN,UAAU,KAAK,KAAf,iBACC,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEN,KAAK,CAACU,IADd;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,WAAW,EAAC,OAJd;AAKE,IAAA,KAAK,EAAEL,MAAM,CAACE,KALhB;AAME,IAAA,QAAQ,EAAEH,QAAQ,CAAC;AACjBO,MAAAA,QAAQ,EAAE;AADO,KAAD,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAaE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEX,KAAK,CAACY,WADjB;AAEE,IAAA,IAAI,EAAEZ,KAAK,CAACU,IAFd;AAGE,IAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGV,KAAK,CAACa,UALT,CADF,CAbF,CADF,CAFJ,EA6BGZ,UAAU,KAAK,IAAf,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,KAAK,CAACc,iBAAZ,CA7B1B,CADF;AAiCD;;AAED,eAAef,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport FormField from \"./FormField\";\nimport Button from \"react-bootstrap/Button\";\nimport newsletter from \"./../util/newsletter.js\";\nimport { useForm } from \"react-hook-form\";\n\nfunction Newsletter(props) {\n  const [subscribed, setSubscribed] = useState(false);\n  const { handleSubmit, register, errors } = useForm();\n\n  const onSubmit = ({ email }) => {\n    setSubscribed(true);\n    // Parent component can optionally\n    // find out when subscribed.\n    props.onSubscribed && props.onSubscribed();\n    // Subscribe them\n    newsletter.subscribe({ email });\n  };\n\n  return (\n    <>\n      {subscribed === false && (\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Form.Row>\n            <Col>\n              <FormField\n                size={props.size}\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                error={errors.email}\n                inputRef={register({\n                  required: \"Please enter an email address\",\n                })}\n              />\n            </Col>\n            <Col xs=\"auto\">\n              <Button\n                variant={props.buttonColor}\n                size={props.size}\n                type=\"submit\"\n              >\n                {props.buttonText}\n              </Button>\n            </Col>\n          </Form.Row>\n        </Form>\n      )}\n\n      {subscribed === true && <div>{props.subscribedMessage}</div>}\n    </>\n  );\n}\n\nexport default Newsletter;\n"]},"metadata":{},"sourceType":"module"}