{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/pages/purchase.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PageLoader from \"./../components/PageLoader\";\nimport FormAlert from \"./../components/FormAlert\";\nimport { useAuth, requireAuth } from \"./../util/auth.js\";\nimport { useRouter } from \"./../util/router.js\";\nimport { redirectToCheckout } from \"./../util/stripe.js\";\n\nfunction PurchasePage(props) {\n  const router = useRouter();\n  const auth = useAuth();\n  const [formAlert, setFormAlert] = useState();\n  useEffect(() => {\n    if (auth.user.planIsActive) {\n      // If user already has an active plan\n      // then take them to Stripe billing\n      router.push(\"/settings/billing\");\n    } else {\n      // Otherwise go to checkout\n      redirectToCheckout(router.query.plan).catch(error => {\n        setFormAlert({\n          type: \"error\",\n          message: error.message\n        });\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  return /*#__PURE__*/React.createElement(PageLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, formAlert && /*#__PURE__*/React.createElement(FormAlert, {\n    type: formAlert.type,\n    message: formAlert.message,\n    style: {\n      maxWidth: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default requireAuth(PurchasePage);","map":{"version":3,"sources":["/usr/src/app/src/pages/purchase.js"],"names":["React","useEffect","useState","PageLoader","FormAlert","useAuth","requireAuth","useRouter","redirectToCheckout","PurchasePage","props","router","auth","formAlert","setFormAlert","user","planIsActive","push","query","plan","catch","error","type","message","maxWidth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,mBAArC;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,kBAAT,QAAmC,qBAAnC;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAMK,IAAI,GAAGP,OAAO,EAApB;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,EAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,IAAI,CAACG,IAAL,CAAUC,YAAd,EAA4B;AAC1B;AACA;AACAL,MAAAA,MAAM,CAACM,IAAP,CAAY,mBAAZ;AACD,KAJD,MAIO;AACL;AACAT,MAAAA,kBAAkB,CAACG,MAAM,CAACO,KAAP,CAAaC,IAAd,CAAlB,CAAsCC,KAAtC,CAA6CC,KAAD,IAAW;AACrDP,QAAAA,YAAY,CAAC;AACXQ,UAAAA,IAAI,EAAE,OADK;AAEXC,UAAAA,OAAO,EAAEF,KAAK,CAACE;AAFJ,SAAD,CAAZ;AAID,OALD;AAMD,KAba,CAed;;AACD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,SAAS,iBACR,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEA,SAAS,CAACS,IADlB;AAEE,IAAA,OAAO,EAAET,SAAS,CAACU,OAFrB;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAWD;;AAED,eAAelB,WAAW,CAACG,YAAD,CAA1B","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PageLoader from \"./../components/PageLoader\";\nimport FormAlert from \"./../components/FormAlert\";\nimport { useAuth, requireAuth } from \"./../util/auth.js\";\nimport { useRouter } from \"./../util/router.js\";\nimport { redirectToCheckout } from \"./../util/stripe.js\";\n\nfunction PurchasePage(props) {\n  const router = useRouter();\n  const auth = useAuth();\n  const [formAlert, setFormAlert] = useState();\n\n  useEffect(() => {\n    if (auth.user.planIsActive) {\n      // If user already has an active plan\n      // then take them to Stripe billing\n      router.push(\"/settings/billing\");\n    } else {\n      // Otherwise go to checkout\n      redirectToCheckout(router.query.plan).catch((error) => {\n        setFormAlert({\n          type: \"error\",\n          message: error.message,\n        });\n      });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <PageLoader>\n      {formAlert && (\n        <FormAlert\n          type={formAlert.type}\n          message={formAlert.message}\n          style={{ maxWidth: \"500px\" }}\n        />\n      )}\n    </PageLoader>\n  );\n}\n\nexport default requireAuth(PurchasePage);\n"]},"metadata":{},"sourceType":"module"}