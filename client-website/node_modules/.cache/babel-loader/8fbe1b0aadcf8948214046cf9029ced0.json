{"ast":null,"code":"/* global ga */\n\n/**\n * Google analytics plugin\n * @link https://getanalytics.io/plugins/google-analytics/\n * @link https://analytics.google.com/analytics/web/\n * @link https://developers.google.com/analytics/devguides/collection/analyticsjs\n * @param {object} pluginConfig - Plugin settings\n * @param {string} pluginConfig.trackingId - site tracking Id\n * @return {*}\n * @example\n *\n * googleAnalytics({\n *   trackingId: '123-xyz'\n * })\n */\nfunction googleAnalytics$1() {\n  var pluginConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // Allow for userland overides of base methods\n\n  return {\n    NAMESPACE: 'google-analytics',\n    config: pluginConfig,\n    initialize: initialize$1,\n    // Google Analytics page view\n    page: function page(_ref) {\n      var payload = _ref.payload,\n          config = _ref.config;\n      var properties = payload.properties;\n      pageView$1(properties.path);\n    },\n\n    /**\n     * Google Analytics track event\n     * @example\n     *\n     * analytics.track('playedVideo', {\n     *   category: 'Videos',\n     *   label: 'Fall Campaign',\n     *   value: 42\n     * })\n     */\n    track: function track(_ref2) {\n      var payload = _ref2.payload,\n          config = _ref2.config,\n          instance = _ref2.instance;\n      var properties = payload.properties,\n          event = payload.event;\n      var label = properties.label,\n          value = properties.value,\n          category = properties.category,\n          nonInteraction = properties.nonInteraction;\n      var campaign = instance.getState('context.campaign');\n      trackEvent$1({\n        hitType: 'event',\n        event: event,\n        label: label,\n        category: category || 'All',\n        value: value,\n        nonInteraction: nonInteraction,\n        campaign: campaign\n      });\n    },\n    identify: function identify(_ref3) {\n      var payload = _ref3.payload,\n          config = _ref3.config;\n      identifyVisitor$1(payload.userId);\n      /* Todo implement custom dimensions\n        http://bit.ly/2yULdOO & http://bit.ly/2NS5nOE\n      // user mapping required\n      ga('set', {\n        'dimensionX': valueX,\n        'dimensionY': valueY,\n        'dimensionZ': valueZ\n      })\n      */\n    },\n    loaded: function loaded() {\n      return !!window.gaplugins;\n    }\n  };\n}\n\nfunction gaNotLoaded() {\n  return typeof ga === 'undefined';\n}\n\nfunction initialize$1(_ref4) {\n  var config = _ref4.config;\n  if (!config.trackingId) throw new Error('No google analytics trackingId defined');\n\n  if (gaNotLoaded()) {\n    /* eslint-disable */\n    (function (i, s, o, g, r, a, m) {\n      i['GoogleAnalyticsObject'] = r;\n      i[r] = i[r] || function () {\n        (i[r].q = i[r].q || []).push(arguments);\n      }, i[r].l = 1 * new Date();\n      a = s.createElement(o), m = s.getElementsByTagName(o)[0];\n      a.async = 1;\n      a.src = g;\n      m.parentNode.insertBefore(a, m);\n    })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');\n    /* eslint-enable */\n\n\n    ga('create', config.trackingId, 'auto');\n\n    if (config.debug) {\n      // Disable sends to GA http://bit.ly/2Ro0vTR\n      ga('set', 'sendHitTask', null);\n      window.ga_debug = {\n        trace: true\n      };\n    }\n  }\n}\n/**\n * Send page view to google analytics\n * @param  {string} [urlPath = location.pathname] - path of current path\n */\n\n\nfunction pageView$1(urlPath) {\n  if (gaNotLoaded()) return;\n  var path = urlPath || document.location.pathname;\n  ga('set', 'page', path);\n  ga('send', 'pageview');\n}\n/**\n * Send event tracking to Google Analytics\n * @param  {object} eventData - GA event payload\n * @param  {string} [eventData.hitType = 'event'] - hitType https://bit.ly/2Jab9L1 one of 'pageview', 'screenview', 'event', 'transaction', 'item', 'social', 'exception', 'timing'\n * @param  {string} [eventData.event] - event Action https://bit.ly/2CUzeoz\n * @param  {string} [eventData.label] - event Label http://bit.ly/2oo8eb3\n * @param  {string} [eventData.category] - event Category http://bit.ly/2EAy9UP\n * @param  {string} [eventData.nonInteraction = false] - nonInteraction https://bit.ly/2CUzeoz\n * @return {object} sent data\n */\n\n\nfunction trackEvent$1(eventData) {\n  if (gaNotLoaded()) return;\n  var data = {\n    // hitType https://bit.ly/2Jab9L1 one of 'pageview', 'screenview', 'event', 'transaction', 'item', 'social', 'exception', 'timing'\n    hitType: eventData.hitType || 'event',\n    // eventAction https://bit.ly/2CUzeoz\n    eventAction: eventData.event,\n    // eventLabel http://bit.ly/2oo8eb3\n    eventLabel: eventData.label,\n    // eventCategory http://bit.ly/2EAy9UP\n    eventCategory: eventData.category || 'All',\n    // nonInteraction https://bit.ly/2CUzeoz\n    nonInteraction: eventData.nonInteraction !== undefined ? !!eventData.nonInteraction : false\n  };\n\n  if (eventData.value) {\n    // how much is this action worth?\n    data.eventValue = format(eventData.value);\n  }\n  /* Attach campaign data */\n\n\n  var campaignData = eventData.campaign || {};\n  var name = campaignData.name,\n      source = campaignData.source,\n      medium = campaignData.medium,\n      content = campaignData.content,\n      keyword = campaignData.keyword;\n  if (name) data.campaignName = name;\n  if (source) data.campaignSource = source;\n  if (medium) data.campaignMedium = medium;\n  if (content) data.campaignContent = content;\n  if (keyword) data.campaignKeyword = keyword;\n  /* Send data to Google Analytics */\n\n  ga('send', 'event', data);\n  return data;\n}\n/**\n * Identify a visitor by Id\n * @param  {string} id - unique visitor ID\n */\n\n\nfunction identifyVisitor$1(id) {\n  if (gaNotLoaded()) return;\n  if (id) ga('set', 'userId', id);\n}\n\nfunction format(value) {\n  if (!value || value < 0) return 0;\n  return Math.round(value);\n}\n/* This module will shake out unused code + work in browser and node ðŸŽ‰ */\n\n\nvar index = googleAnalytics$1;\n/* init for CDN usage. globalName.init() */\n\nvar init = googleAnalytics$1;\n/* Standalone API */\n\nvar initialize$2 = initialize$1;\nvar page = pageView$1;\nvar track = trackEvent$1;\nvar identify = identifyVisitor$1;\nexport default index;\nexport { init, identify, track, page, initialize$2 as initialize };","map":{"version":3,"sources":["/usr/src/app/node_modules/@analytics/google-analytics/lib/analytics-plugin-ga.browser.es.js"],"names":["googleAnalytics$1","pluginConfig","arguments","length","undefined","NAMESPACE","config","initialize","initialize$1","page","_ref","payload","properties","pageView$1","path","track","_ref2","instance","event","label","value","category","nonInteraction","campaign","getState","trackEvent$1","hitType","identify","_ref3","identifyVisitor$1","userId","loaded","window","gaplugins","gaNotLoaded","ga","_ref4","trackingId","Error","i","s","o","g","r","a","m","q","push","l","Date","createElement","getElementsByTagName","async","src","parentNode","insertBefore","document","debug","ga_debug","trace","urlPath","location","pathname","eventData","data","eventAction","eventLabel","eventCategory","eventValue","format","campaignData","name","source","medium","content","keyword","campaignName","campaignSource","campaignMedium","campaignContent","campaignKeyword","id","Math","round","index","init","initialize$2"],"mappings":"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","sourcesContent":["/* global ga */\n\n/**\n * Google analytics plugin\n * @link https://getanalytics.io/plugins/google-analytics/\n * @link https://analytics.google.com/analytics/web/\n * @link https://developers.google.com/analytics/devguides/collection/analyticsjs\n * @param {object} pluginConfig - Plugin settings\n * @param {string} pluginConfig.trackingId - site tracking Id\n * @return {*}\n * @example\n *\n * googleAnalytics({\n *   trackingId: '123-xyz'\n * })\n */\nfunction googleAnalytics$1() {\n  var pluginConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // Allow for userland overides of base methods\n  return {\n    NAMESPACE: 'google-analytics',\n    config: pluginConfig,\n    initialize: initialize$1,\n    // Google Analytics page view\n    page: function page(_ref) {\n      var payload = _ref.payload,\n          config = _ref.config;\n      var properties = payload.properties;\n      pageView$1(properties.path);\n    },\n\n    /**\n     * Google Analytics track event\n     * @example\n     *\n     * analytics.track('playedVideo', {\n     *   category: 'Videos',\n     *   label: 'Fall Campaign',\n     *   value: 42\n     * })\n     */\n    track: function track(_ref2) {\n      var payload = _ref2.payload,\n          config = _ref2.config,\n          instance = _ref2.instance;\n      var properties = payload.properties,\n          event = payload.event;\n      var label = properties.label,\n          value = properties.value,\n          category = properties.category,\n          nonInteraction = properties.nonInteraction;\n      var campaign = instance.getState('context.campaign');\n      trackEvent$1({\n        hitType: 'event',\n        event: event,\n        label: label,\n        category: category || 'All',\n        value: value,\n        nonInteraction: nonInteraction,\n        campaign: campaign\n      });\n    },\n    identify: function identify(_ref3) {\n      var payload = _ref3.payload,\n          config = _ref3.config;\n      identifyVisitor$1(payload.userId);\n      /* Todo implement custom dimensions\n        http://bit.ly/2yULdOO & http://bit.ly/2NS5nOE\n      // user mapping required\n      ga('set', {\n        'dimensionX': valueX,\n        'dimensionY': valueY,\n        'dimensionZ': valueZ\n      })\n      */\n    },\n    loaded: function loaded() {\n      return !!window.gaplugins;\n    }\n  };\n}\n\nfunction gaNotLoaded() {\n  return typeof ga === 'undefined';\n}\n\nfunction initialize$1(_ref4) {\n  var config = _ref4.config;\n  if (!config.trackingId) throw new Error('No google analytics trackingId defined');\n\n  if (gaNotLoaded()) {\n    /* eslint-disable */\n    (function (i, s, o, g, r, a, m) {\n      i['GoogleAnalyticsObject'] = r;\n      i[r] = i[r] || function () {\n        (i[r].q = i[r].q || []).push(arguments);\n      }, i[r].l = 1 * new Date();\n      a = s.createElement(o), m = s.getElementsByTagName(o)[0];\n      a.async = 1;\n      a.src = g;\n      m.parentNode.insertBefore(a, m);\n    })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');\n    /* eslint-enable */\n\n\n    ga('create', config.trackingId, 'auto');\n\n    if (config.debug) {\n      // Disable sends to GA http://bit.ly/2Ro0vTR\n      ga('set', 'sendHitTask', null);\n      window.ga_debug = {\n        trace: true\n      };\n    }\n  }\n}\n/**\n * Send page view to google analytics\n * @param  {string} [urlPath = location.pathname] - path of current path\n */\n\nfunction pageView$1(urlPath) {\n  if (gaNotLoaded()) return;\n  var path = urlPath || document.location.pathname;\n  ga('set', 'page', path);\n  ga('send', 'pageview');\n}\n/**\n * Send event tracking to Google Analytics\n * @param  {object} eventData - GA event payload\n * @param  {string} [eventData.hitType = 'event'] - hitType https://bit.ly/2Jab9L1 one of 'pageview', 'screenview', 'event', 'transaction', 'item', 'social', 'exception', 'timing'\n * @param  {string} [eventData.event] - event Action https://bit.ly/2CUzeoz\n * @param  {string} [eventData.label] - event Label http://bit.ly/2oo8eb3\n * @param  {string} [eventData.category] - event Category http://bit.ly/2EAy9UP\n * @param  {string} [eventData.nonInteraction = false] - nonInteraction https://bit.ly/2CUzeoz\n * @return {object} sent data\n */\n\nfunction trackEvent$1(eventData) {\n  if (gaNotLoaded()) return;\n  var data = {\n    // hitType https://bit.ly/2Jab9L1 one of 'pageview', 'screenview', 'event', 'transaction', 'item', 'social', 'exception', 'timing'\n    hitType: eventData.hitType || 'event',\n    // eventAction https://bit.ly/2CUzeoz\n    eventAction: eventData.event,\n    // eventLabel http://bit.ly/2oo8eb3\n    eventLabel: eventData.label,\n    // eventCategory http://bit.ly/2EAy9UP\n    eventCategory: eventData.category || 'All',\n    // nonInteraction https://bit.ly/2CUzeoz\n    nonInteraction: eventData.nonInteraction !== undefined ? !!eventData.nonInteraction : false\n  };\n\n  if (eventData.value) {\n    // how much is this action worth?\n    data.eventValue = format(eventData.value);\n  }\n  /* Attach campaign data */\n\n\n  var campaignData = eventData.campaign || {};\n  var name = campaignData.name,\n      source = campaignData.source,\n      medium = campaignData.medium,\n      content = campaignData.content,\n      keyword = campaignData.keyword;\n  if (name) data.campaignName = name;\n  if (source) data.campaignSource = source;\n  if (medium) data.campaignMedium = medium;\n  if (content) data.campaignContent = content;\n  if (keyword) data.campaignKeyword = keyword;\n  /* Send data to Google Analytics */\n\n  ga('send', 'event', data);\n  return data;\n}\n/**\n * Identify a visitor by Id\n * @param  {string} id - unique visitor ID\n */\n\nfunction identifyVisitor$1(id) {\n  if (gaNotLoaded()) return;\n  if (id) ga('set', 'userId', id);\n}\n\nfunction format(value) {\n  if (!value || value < 0) return 0;\n  return Math.round(value);\n}\n\n/* This module will shake out unused code + work in browser and node ðŸŽ‰ */\n\nvar index = googleAnalytics$1;\n/* init for CDN usage. globalName.init() */\n\nvar init = googleAnalytics$1;\n/* Standalone API */\n\nvar initialize$2 = initialize$1;\nvar page = pageView$1;\nvar track = trackEvent$1;\nvar identify = identifyVisitor$1;\n\nexport default index;\nexport { init, identify, track, page, initialize$2 as initialize };\n"]},"metadata":{},"sourceType":"module"}